@page "/"

<p><span style="color:white">Hi, I'm John Perrin (PezzA) and welcome to my Advent of Code site!</span>  This repo contains all the solutions I have done in c#.  (and specifically c# > 6.0).  Click on a year below to see all the puzzles solves so far.  If it has a HTML or UNITY icon, the puzzle has a visualisation!</p>

<MudExpansionPanels MultiExpansion="false">
    @foreach (var y in Years)
    {
        <MudExpansionPanel DisableGutters="true">
            <TitleContent>
                <div class="d-flex">
                    <MudText Class="mt-1">@y.ToString()</MudText>
                    <MudText Class="d-flex ml-auto">@Puzzles.Where(p => p.Year == y).Sum(p=> p.Stars)/50<MudIcon Icon="@Icons.Material.Filled.Star" Color="MudBlazor.Color.Warning" /></MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <YearListing Year="y" PuzzleData="@Puzzles.Where(p => p.Year == y)" />
            </ChildContent> 
        </MudExpansionPanel>
    }
</MudExpansionPanels>


@code {
    private IEnumerable<Puzzles.PuzzleDataAttribute> Puzzles = new List<Puzzles.PuzzleDataAttribute>();
    private IEnumerable<int> Years { get; set; } = new List<int>();

    protected override void OnInitialized()
    {
        Puzzles = PuzzleManager.GetAllBasicPuzzles()
          .Where(p => p.Year != 0 && p.Day != 0)
          .OrderBy(p => p.Year)
          .ThenBy(p => p.Day);

        Years = Puzzles.Select(p => p.Year).Distinct().Order();
    }
}

